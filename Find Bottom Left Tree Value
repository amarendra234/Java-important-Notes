/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 class Pair{
       TreeNode node;
       int lvl;
       Pair(TreeNode node,int lvl){
          this.node=node;
          this.lvl=lvl;
       }
 }
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        Queue<Pair>q=new LinkedList<>();
        q.add(new Pair(root,0));
        int ans=-1;
        int min_val=-1;
        while(q.size()>0){
            Pair Node=q.poll();
            TreeNode temp=Node.node;
            int level=Node.lvl;
        
            if(min_val<level){
                min_val=level;
                ans=temp.val;
            }
            if(temp.left!=null){
                q.add(new Pair(temp.left,level+1));
            }
            if(temp.right!=null){
                q.add(new Pair(temp.right,level+1));
            }

        }
        return ans;
    }
}
