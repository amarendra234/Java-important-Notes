/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int max_sum;
    public int maxPathSum(TreeNode root) {
        max_sum=Integer.MIN_VALUE;
        findMaxPathSum(root);
        return max_sum;
    }
    private int findMaxPathSum(TreeNode root){
          if(root==null){
            return 0;
          }
          int leftSum=findMaxPathSum(root.left);
          int rightSum=findMaxPathSum(root.right);
         // int res1=leftSum<0?0:leftSum;
         // int res2=rightSum<0?0:rightSum;
          if(leftSum<0){
            leftSum=0;
          }
          if(rightSum<0){
            rightSum=0;
          }
          max_sum=Math.max(max_sum,leftSum+rightSum+root.val);
          return Math.max(leftSum,rightSum)+root.val;
    }
}
